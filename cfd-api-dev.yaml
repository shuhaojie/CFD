kind: Deployment
apiVersion: apps/v1
metadata:
  name: cfd-celery
  namespace: cfd-dev
  labels:
    app: cfd-celery
  annotations:
    deployment.kubernetes.io/revision: '2'
    kubesphere.io/creator: admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cfd-celery
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: cfd-celery
      annotations:
        kubesphere.io/restartedAt: '2022-12-27T10:05:20.387Z'
    spec:
      volumes:
        - name: host-time
          hostPath:
            path: /etc/localtime
            type: ''
        - name: cfd-workspaces-data
          persistentVolumeClaim:
            claimName: cfd-workspaces-data
      containers:
        - name: cfd-api
          image: '$REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:dev_$BUILD_NUMBER'
          command:
            - python
            - /server/main.py
          workingDir: /server/
          ports:
            - containerPort: 8000
              protocol: TCP
          envFrom:
            - configMapRef:
                name: cfd-configmap
          resources: {}
          volumeMounts:
            - name: cfd-workspaces-data
              mountPath: /workspaces/data
            - name: host-time
              readOnly: true
              mountPath: /etc/localtime
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
        - name: cfd-celery
          image: '$REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:dev_$BUILD_NUMBER'
          command:
            - bash
            - /server/start.sh
          workingDir: /server/
          envFrom:
            - configMapRef:
                name: cfd-configmap
          resources: {}
          volumeMounts:
            - name: cfd-workspaces-data
              mountPath: /workspaces/data
            - name: host-time
              readOnly: true
              mountPath: /etc/localtime
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: cfd-celery
                topologyKey: kubernetes.io/hostname
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
